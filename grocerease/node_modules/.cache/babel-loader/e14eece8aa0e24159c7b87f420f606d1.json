{"ast":null,"code":"import { useCallback, useEffect, useMemo } from 'react';\nimport useLocalStorageStateBase from './useLocalStorageStateBase';\nexport default function createLocalStorageStateHook(key, defaultValue) {\n  const setValueFunctions = [];\n  const removeItemFunctions = [];\n  return function useLocalStorageStateHook() {\n    const [value, setValue, {\n      isPersistent,\n      removeItem\n    }] = useLocalStorageStateBase(key, defaultValue);\n    const setValueAll = useCallback(newValue => {\n      for (const setValueFunction of setValueFunctions) {\n        setValueFunction(newValue);\n      }\n    }, []);\n    useEffect(() => {\n      setValueFunctions.push(setValue);\n      removeItemFunctions.push(removeItem);\n      return () => {\n        setValueFunctions.splice(setValueFunctions.indexOf(setValue), 1);\n        removeItemFunctions.splice(removeItemFunctions.indexOf(removeItem), 1);\n      };\n    }, [setValue, removeItem]);\n    return useMemo(() => [value, setValueAll, {\n      isPersistent,\n\n      removeItem() {\n        for (const removeItemFunction of removeItemFunctions) {\n          removeItemFunction();\n        }\n      }\n\n    }], [value, setValueAll, isPersistent]);\n  };\n}","map":{"version":3,"sources":["/Users/jonathanmarsigli/momentum-assignments/GrocerEase_FrontEnd/grocerease/node_modules/use-local-storage-state/es/src/createLocalStorageStateHook.js"],"names":["useCallback","useEffect","useMemo","useLocalStorageStateBase","createLocalStorageStateHook","key","defaultValue","setValueFunctions","removeItemFunctions","useLocalStorageStateHook","value","setValue","isPersistent","removeItem","setValueAll","newValue","setValueFunction","push","splice","indexOf","removeItemFunction"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,OAAjC,QAAgD,OAAhD;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,eAAe,SAASC,2BAAT,CAAqCC,GAArC,EAA0CC,YAA1C,EAAwD;AACnE,QAAMC,iBAAiB,GAAG,EAA1B;AACA,QAAMC,mBAAmB,GAAG,EAA5B;AACA,SAAO,SAASC,wBAAT,GAAoC;AACvC,UAAM,CAACC,KAAD,EAAQC,QAAR,EAAkB;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,KAAlB,IAAkDV,wBAAwB,CAACE,GAAD,EAAMC,YAAN,CAAhF;AACA,UAAMQ,WAAW,GAAGd,WAAW,CAAEe,QAAD,IAAc;AAC1C,WAAK,MAAMC,gBAAX,IAA+BT,iBAA/B,EAAkD;AAC9CS,QAAAA,gBAAgB,CAACD,QAAD,CAAhB;AACH;AACJ,KAJ8B,EAI5B,EAJ4B,CAA/B;AAKAd,IAAAA,SAAS,CAAC,MAAM;AACZM,MAAAA,iBAAiB,CAACU,IAAlB,CAAuBN,QAAvB;AACAH,MAAAA,mBAAmB,CAACS,IAApB,CAAyBJ,UAAzB;AACA,aAAO,MAAM;AACTN,QAAAA,iBAAiB,CAACW,MAAlB,CAAyBX,iBAAiB,CAACY,OAAlB,CAA0BR,QAA1B,CAAzB,EAA8D,CAA9D;AACAH,QAAAA,mBAAmB,CAACU,MAApB,CAA2BV,mBAAmB,CAACW,OAApB,CAA4BN,UAA5B,CAA3B,EAAoE,CAApE;AACH,OAHD;AAIH,KAPQ,EAON,CAACF,QAAD,EAAWE,UAAX,CAPM,CAAT;AAQA,WAAOX,OAAO,CAAC,MAAM,CACjBQ,KADiB,EAEjBI,WAFiB,EAGjB;AACIF,MAAAA,YADJ;;AAEIC,MAAAA,UAAU,GAAG;AACT,aAAK,MAAMO,kBAAX,IAAiCZ,mBAAjC,EAAsD;AAClDY,UAAAA,kBAAkB;AACrB;AACJ;;AANL,KAHiB,CAAP,EAWX,CAACV,KAAD,EAAQI,WAAR,EAAqBF,YAArB,CAXW,CAAd;AAYH,GA3BD;AA4BH","sourcesContent":["import { useCallback, useEffect, useMemo } from 'react';\nimport useLocalStorageStateBase from './useLocalStorageStateBase';\nexport default function createLocalStorageStateHook(key, defaultValue) {\n    const setValueFunctions = [];\n    const removeItemFunctions = [];\n    return function useLocalStorageStateHook() {\n        const [value, setValue, { isPersistent, removeItem }] = useLocalStorageStateBase(key, defaultValue);\n        const setValueAll = useCallback((newValue) => {\n            for (const setValueFunction of setValueFunctions) {\n                setValueFunction(newValue);\n            }\n        }, []);\n        useEffect(() => {\n            setValueFunctions.push(setValue);\n            removeItemFunctions.push(removeItem);\n            return () => {\n                setValueFunctions.splice(setValueFunctions.indexOf(setValue), 1);\n                removeItemFunctions.splice(removeItemFunctions.indexOf(removeItem), 1);\n            };\n        }, [setValue, removeItem]);\n        return useMemo(() => [\n            value,\n            setValueAll,\n            {\n                isPersistent,\n                removeItem() {\n                    for (const removeItemFunction of removeItemFunctions) {\n                        removeItemFunction();\n                    }\n                },\n            },\n        ], [value, setValueAll, isPersistent]);\n    };\n}\n"]},"metadata":{},"sourceType":"module"}