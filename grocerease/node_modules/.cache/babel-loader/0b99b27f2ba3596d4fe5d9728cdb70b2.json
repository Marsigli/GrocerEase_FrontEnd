{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanmarsigli/momentum-assignments/GrocerEase_FrontEnd/grocerease/src/components/SavedGroceryList.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { GroceryCard } from './GroceryCard';\nimport _ from 'lodash';\nimport '../groceryCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SavedGroceryList = _ref => {\n  _s();\n\n  let {\n    token\n  } = _ref;\n  const [lists, setLists] = useState([]); // currently you are hard coding for the sort by function, get this function to render the name/titles in order, then you will be done with this function\n\n  useEffect(() => {\n    axios.get('https://grocerease.herokuapp.com/grocerease/lists/', {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `token ${token}`\n      }\n    }).then(res => {\n      let saved_lists_from_server = res.data;\n      console.log('LISTS from SERVER');\n      console.log(saved_lists_from_server);\n\n      const sorted_lists = _.orderBy(saved_lists_from_server, ['date_created'], ['desc']);\n\n      console.log({\n        sorted_lists\n      });\n      setLists(sorted_lists);\n    }).catch(error => console.log(error));\n  }, [token, setLists]);\n\n  const DeleteList = listId => {\n    axios.delete(`https://grocerease.herokuapp.com/grocerease/delete_list/${listId}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `token ${token}`\n      }\n    }).then(res => {\n      setLists(lists.filter(list => list.pk !== listId));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"groceryList_container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-filter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Sort By:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"sort-by\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select one\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"date_created\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }, this), lists && lists.map(list => {\n        console.log(list);\n        return /*#__PURE__*/_jsxDEV(GroceryCard, {\n          name: list.name,\n          date_created: list.date_created,\n          tags: list.tags,\n          listId: list.pk,\n          onDelete: DeleteList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 37\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 21\n  }, this);\n};\n\n_s(SavedGroceryList, \"LrIaNofUeLvNeBc8bn5FotDYde0=\");\n\n_c = SavedGroceryList;\nexport default SavedGroceryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedGroceryList\");","map":{"version":3,"sources":["/Users/jonathanmarsigli/momentum-assignments/GrocerEase_FrontEnd/grocerease/src/components/SavedGroceryList.js"],"names":["axios","useState","useEffect","GroceryCard","_","SavedGroceryList","token","lists","setLists","get","headers","Authorization","then","res","saved_lists_from_server","data","console","log","sorted_lists","orderBy","catch","error","DeleteList","listId","delete","filter","list","pk","map","name","date_created","tags"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport { GroceryCard } from './GroceryCard'\nimport _ from 'lodash'\nimport '../groceryCard.css'\n\nconst SavedGroceryList = ({ token }) => {\n    const [lists, setLists] = useState([])\n    // currently you are hard coding for the sort by function, get this function to render the name/titles in order, then you will be done with this function\n    useEffect(() => {\n        axios\n            .get('https://grocerease.herokuapp.com/grocerease/lists/', {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `token ${token}`,\n                },\n            })\n            .then((res) => {\n                let saved_lists_from_server = res.data\n                console.log('LISTS from SERVER')\n                console.log(saved_lists_from_server)\n                const sorted_lists = _.orderBy(\n                    saved_lists_from_server,\n                    ['date_created'],\n                    ['desc']\n                )\n                console.log({ sorted_lists })\n                setLists(sorted_lists)\n            })\n            .catch((error) => console.log(error))\n    }, [token, setLists])\n\n\n    const DeleteList = (listId) => {\n                        axios.delete(`https://grocerease.herokuapp.com/grocerease/delete_list/${listId}`,\n                            {\n                                headers: {\n                                    'Content-Type': 'application/json',\n                                    Authorization: `token ${token}`\n                                }\n                            })\n                            .then(res => {\n                                setLists(lists.filter(list => (list.pk !== listId)))\n                            })\n                    }\n\n                    return (\n\n                    <div className='groceryList_container'>\n                        <div>\n                            <div className=\"search-filter\">\n                                <div>\n                                    <label>Sort By:</label>\n                                    <select className=\"sort-by\">\n                                        <option value=\"\">Select one</option>\n                                        <option value=\"date_created\">Date</option>\n                                    </select>\n                                </div>\n                            </div>\n                            {\n                            lists &&\n                            lists.map((list) => {\n                                console.log(list)\n                                return (\n\n                                    <GroceryCard\n                                        name={list.name}\n                                        date_created={list.date_created}\n                                        tags={list.tags}\n                                        listId={list.pk}\n                                        onDelete={DeleteList} />\n                                )\n                            })\n                        }\n\n                        </div>\n                    </div>\n\n\n                )\n}\n\n\n                export default SavedGroceryList;\n"]},"metadata":{},"sourceType":"module"}